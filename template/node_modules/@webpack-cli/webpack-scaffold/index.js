"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jscodeshift = require("jscodeshift");
function createArrowFunction(value) {
    return `() => '${value}'`;
}
exports.createArrowFunction = createArrowFunction;
function createRegularFunction(value) {
    return `function () {\n return '${value}'\n}`;
}
exports.createRegularFunction = createRegularFunction;
function createDynamicPromise(arrOrString) {
    if (Array.isArray(arrOrString)) {
        return ("() => new Promise((resolve) => resolve([" +
            arrOrString.map((func) => {
                return "'" + func + "'";
            }) +
            "]))");
    }
    else {
        return "() => new Promise((resolve) => resolve(" + "'" + arrOrString + "'" + "))";
    }
}
exports.createDynamicPromise = createDynamicPromise;
function createAssetFilterFunction(value) {
    return `function (assetFilename) {\n return assetFilename.endsWith('.${value}');\n}`;
}
exports.createAssetFilterFunction = createAssetFilterFunction;
function createExternalFunction(regexp) {
    return ("\n function (context, request, callback) {\n if (" +
        "/" +
        regexp +
        "/.test(request)){" +
        "\n" +
        "   return callback(null, 'commonjs' + request);\n}\n" +
        "callback();\n}");
}
exports.createExternalFunction = createExternalFunction;
function parseValue(regexp) {
    return jscodeshift(regexp);
}
exports.parseValue = parseValue;
function createRequire(val) {
    return `const ${val} = require('${val}');`;
}
exports.createRequire = createRequire;
function List(name, message, choices) {
    return {
        choices,
        message,
        name,
        type: "list",
    };
}
exports.List = List;
function RawList(name, message, choices) {
    return {
        choices,
        message,
        name,
        type: "rawlist",
    };
}
exports.RawList = RawList;
function CheckList(name, message, choices) {
    return {
        choices,
        message,
        name,
        type: "checkbox",
    };
}
exports.CheckList = CheckList;
function Input(name, message) {
    return {
        message,
        name,
        type: "input",
    };
}
exports.Input = Input;
function InputValidate(name, message, cb) {
    return {
        message,
        name,
        type: "input",
        validate: cb,
    };
}
exports.InputValidate = InputValidate;
function Confirm(name, message) {
    return {
        message,
        name,
        type: "confirm",
    };
}
exports.Confirm = Confirm;
function AutoComplete(name, message, options = {}) {
    return Object.assign({
        message,
        name,
        type: "autocomplete",
    }, options);
}
exports.AutoComplete = AutoComplete;
